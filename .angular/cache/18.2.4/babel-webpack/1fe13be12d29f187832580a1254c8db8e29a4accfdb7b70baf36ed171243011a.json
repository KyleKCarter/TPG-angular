{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/park.service\";\nimport * as i3 from \"@angular/common\";\nfunction RidesComponent_div_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7);\n    i0.ɵɵelement(2, \"img\", 8);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ride_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"routerLink\", ride_r3.ride_name);\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"src\", ride_r3.ride_img, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ride_r3.ride_name);\n  }\n}\nfunction RidesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function RidesComponent_div_0_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.backClick());\n    });\n    i0.ɵɵtext(2, \"Back\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵelement(4, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵtemplate(6, RidesComponent_div_0_div_6_Template, 5, 3, \"div\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r1.park_logo, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rides);\n  }\n}\nexport let RidesComponent = /*#__PURE__*/(() => {\n  class RidesComponent {\n    route;\n    _parkService;\n    _location;\n    park = '';\n    park_logo = '';\n    rides;\n    isFetching = false;\n    constructor(route, _parkService, _location) {\n      this.route = route;\n      this._parkService = _parkService;\n      this._location = _location;\n    }\n    ngOnInit() {\n      this.setPark();\n    }\n    backClick() {\n      this._location.back();\n    }\n    setPark() {\n      // Function will set what display is shown\n      this.route.paramMap.subscribe(params => {\n        this.park = params.get('park') || '';\n        console.log(this.park);\n      });\n      this.getRides();\n    }\n    getRides() {\n      this.isFetching = true;\n      console.log(this.park);\n      this._parkService.getParkRides(this.park).subscribe(response => {\n        console.log(response);\n        if (response) {\n          this.rides = response;\n          this.park_logo = response.park_logo;\n          this.isFetching = false;\n        }\n      });\n    }\n    static ɵfac = function RidesComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RidesComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ParkService), i0.ɵɵdirectiveInject(i3.Location));\n    };\n    static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RidesComponent,\n      selectors: [[\"app-rides\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"rides-page\", 4, \"ngIf\"], [1, \"rides-page\"], [3, \"click\"], [1, \"park-logo\"], [\"alt\", \"park logo\", 3, \"src\"], [1, \"rides\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ride-tile\", 3, \"routerLink\"], [\"alt\", \"\", 1, \"ride-img\", 3, \"src\"]],\n      template: function RidesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, RidesComponent_div_0_Template, 7, 2, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.rides);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i1.RouterLink],\n      styles: [\".rides-page[_ngcontent-%COMP%]{margin-top:75px}.park-title[_ngcontent-%COMP%]{text-align:center}.park-logo[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;padding:0;margin:0}.rides[_ngcontent-%COMP%]{display:flex;flex-flow:wrap;justify-content:space-around}.ride-tile[_ngcontent-%COMP%]{border:1px solid grey;display:flex;flex-direction:column;justify-content:space-around;align-items:center;padding:10px;margin:15px;width:400px;cursor:pointer}.ride-img[_ngcontent-%COMP%]{width:250px}\"]\n    }))();\n  }\n  return RidesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}