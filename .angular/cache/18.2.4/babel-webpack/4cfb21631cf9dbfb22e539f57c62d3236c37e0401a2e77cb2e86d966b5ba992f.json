{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/park.service\";\nexport let AttractionComponent = /*#__PURE__*/(() => {\n  class AttractionComponent {\n    route;\n    _parkService;\n    attraction;\n    park;\n    // rides: RideResponse;\n    rides;\n    ride;\n    constructor(route, _parkService) {\n      this.route = route;\n      this._parkService = _parkService;\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        this.attraction = params.get('attraction');\n        this.park = params.get('park');\n        console.log(this.attraction);\n      });\n      this.getAttraction();\n    }\n    getAttraction() {\n      // function get's the ride based off attraction selected\n      this._parkService.getRides(this.park).subscribe(response => {\n        if (response) {\n          this.rides = response;\n        }\n        console.log(this.rides);\n        for (let i = 0; i <= this.rides.length; i++) {\n          if (this.rides[i].name === this.attraction) {\n            this.ride = this.rides[i];\n          }\n        }\n      });\n    }\n    static ɵfac = function AttractionComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AttractionComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ParkService));\n    };\n    static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AttractionComponent,\n      selectors: [[\"app-attraction\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[\"alt\", \"\", 3, \"src\"]],\n      template: function AttractionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n          i0.ɵɵelement(2, \"img\", 0);\n          i0.ɵɵelementStart(3, \"h3\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵpropertyInterpolate(\"src\", ctx.ride.img, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.ride.name);\n        }\n      }\n    }))();\n  }\n  return AttractionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}